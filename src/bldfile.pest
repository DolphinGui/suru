valid_char = _{ 
    LETTER | NUMBER | MARK | CONNECTOR_PUNCTUATION | DASH_PUNCTUATION | MATH_SYMBOL | "/" | "\\" | "." 
    | "\"" | "\'" | "#"
}
ws = _{ " " }
token = { valid_char+ }
expr = { ("$(" ~ (ws* ~ expr ~ ws*)+ ~ ")") | valid_char+ }

template = { "%" ~ valid_char* }

implicit_var = { "$@" | "$^" | "$br" }

recipe_step = { "\t" ~ (ws* ~(implicit_var | expr))+ }

recipe = {
template ~ ws* ~ "<" ~ (ws* ~ template ~ ws*)* ~ (NEWLINE ~ recipe_step)+ }

task = { expr ~ ws* ~ ":" ~ (ws* ~ expr)* }

vardecl = { token ~ ws* ~ "=" ~ (ws* ~ expr)+ }

file = { SOI ~ ws* ~ ((task | recipe | vardecl)? ~ NEWLINE)* ~ ws* ~ EOI }

